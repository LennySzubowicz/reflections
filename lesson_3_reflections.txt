When would you want to use a remote repository rather than keeping all your work
local?

    You would want to use a remote repository if multiple people are
    contributing to that repository or if you expect to contribute from more
    than one system. Another benefit of a remote repository is that it's an
    off-site backup.

Why might you want to always pull changes manually rather than having Git
automatically stay up-to-date with your remote repository?

    You probably wouldn't want git to automatically modify your local
    repository by doing a pull without your consent. It's possible that you
    are actively working with the contents of your local git repository as it
    is. In addition, you could have multiple remote repositories and multiple
    remote branches in each. Should git automatically pull all, or some subset?
    The simplest approach is to have you decide when and what you want to pull.

Describe the differences between forks, clones, and branches. When would you
use one instead of another?

    A clone is a copy of another git repository. The typical reason to create
    a clone of a git repository is to obtain a private local copy of a remote
    repository. You could make any change you wish in your local clone even
    if you do not have permission to make changes to the remote repository.

    A branch is a diverged sequence of changes that are isolated from some
    other branches within a given git repository. A branch exists
    within any type of git repository. You would use a branch to work on a
    set of changes that you want to keep off to the side for some reason.

    A fork is a remote repository that you can create on GitHub. It's a clone
    of another repository on GitHub. You would create a fork on GitHub if
    you do not have permission to write to the source of the fork but
    desire to eventually request acceptance of contributions or changes
    to that source repository on GitHub. You can also clone your forked
    repository to have a local copy of that repository to work on.

What is the benefit of having a copy of the last known state of the remote
stored locally?

    Having a local pointer to the last known state of a remote branch
    makes it possible to check if you have made changes on that branch
    without having to go and access the remote git repository. It also
    facilitates fetches and pulls from the remote repository.

How would you collaborate without using Git or GitHub? What would be easier,
and what would be harder?

    You could colaborate using shared access to a system that hosts a
    remote git repository. Each individual would have a their own local
    clone and would probably want to do their work locally on their own
    branches in their clones. You would need to use email or some
    other agreed to communication mechanism to notify reviewers about
    branches that have been pushed to the remote library. Similarly,
    reviews would be done via email.

    GitHub provides automation for the notification of pending changes
    that require review and also provides a mechanism to provide feedback
    on the pending changes.


    do their work on a bYou would then use email, or some other
    agreed to communication mechanism to request reviews of
